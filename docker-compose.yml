services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: disposable-suite-app
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
      - HOST=0.0.0.0
      - REDIS_URL=redis://redis:6379
      - REDIS_DB=0
      - ENABLE_MONITORING=true
      - SESSION_PERSISTENCE_ENABLED=true
      - LOG_LEVEL=info
      - BROWSER_IMAGE=disposable-browser-chromium
    volumes:
      - type: bind
        source: /var/run/docker.sock
        target: /var/run/docker.sock
        read_only: true
      - app-logs:/app/logs
    depends_on:
      - redis
    networks:
      - disposable-suite-network
    extra_hosts:
      - "host.docker.internal:host-gateway"
    # Temporarily disable health check to debug Docker connection issues
    # healthcheck:
    #   test: ["CMD", "node", "-e", "require('http').get('http://localhost:4000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3
    #   start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: disposable-suite-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - disposable-suite-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: disposable-suite-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - disposable-suite-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  app-logs:
    driver: local
  redis-data:
    driver: local

networks:
  disposable-suite-network:
    driver: bridge 